{"version":3,"file":"hash-it.min.js","sources":["../src/constants.ts","../src/arrayBuffer.ts","../src/stringify.ts","../src/index.ts","../src/hash.ts"],"sourcesContent":["export enum OBJECT_CLASS_TYPE {\n  Arguments = '[object Arguments]',\n  Array = '[object Array]',\n  ArrayBuffer = '[object ArrayBuffer]',\n  Boolean = '[object Boolean]',\n  DataView = '[object DataView]',\n  Date = '[object Date]',\n  DocumentFragment = '[object DocumentFragment]',\n  Error = '[object Error]',\n  Event = '[object Event]',\n  Float32Array = '[object Float32Array]',\n  Float64Array = '[object Float64Array]',\n  Function = '[object Function]',\n  Generator = '[object Generator]',\n  GeneratorFunction = '[object GeneratorFunction]',\n  HTMLElement = '[object HTMLElement]',\n  Int8Array = '[object Int8Array]',\n  Int16Array = '[object Int16Array]',\n  Int32Array = '[object Int32Array]',\n  Map = '[object Map]',\n  Null = '[object Null]',\n  Number = '[object Number]',\n  Object = '[object Object]',\n  Promise = '[object Promise]',\n  RegExp = '[object RegExp]',\n  Set = '[object Set]',\n  String = '[object String]',\n  Symbol = '[object Symbol]',\n  Uint8Array = '[object Uint8Array]',\n  Uint8ClampedArray = '[object Uint8ClampedArray]',\n  Uint16Array = '[object Uint16Array]',\n  Uint32Array = '[object Uint32Array]',\n  Undefined = '[object Undefined]',\n  WeakMap = '[object WeakMap]',\n  WeakSet = '[object WeakSet]',\n  Window = '[object Window]',\n}\n\nexport const OBJECT_CLASS = {\n  [OBJECT_CLASS_TYPE.Arguments]: 'Arguments',\n  [OBJECT_CLASS_TYPE.Array]: 'Array',\n  [OBJECT_CLASS_TYPE.ArrayBuffer]: 'ArrayBuffer',\n  [OBJECT_CLASS_TYPE.Boolean]: 'Boolean',\n  [OBJECT_CLASS_TYPE.DataView]: 'DataView',\n  [OBJECT_CLASS_TYPE.Date]: 'Date',\n  [OBJECT_CLASS_TYPE.DocumentFragment]: 'DocumentFragment',\n  [OBJECT_CLASS_TYPE.Error]: 'Error',\n  [OBJECT_CLASS_TYPE.Event]: 'Event',\n  [OBJECT_CLASS_TYPE.Float32Array]: 'Float32Array',\n  [OBJECT_CLASS_TYPE.Float64Array]: 'Float64Array',\n  [OBJECT_CLASS_TYPE.Function]: 'Function',\n  [OBJECT_CLASS_TYPE.Generator]: 'Generator',\n  [OBJECT_CLASS_TYPE.GeneratorFunction]: 'GeneratorFunction',\n  [OBJECT_CLASS_TYPE.HTMLElement]: 'HTMLElement',\n  [OBJECT_CLASS_TYPE.Int8Array]: 'Int8Array',\n  [OBJECT_CLASS_TYPE.Int16Array]: 'Int16Array',\n  [OBJECT_CLASS_TYPE.Int32Array]: 'Int32Array',\n  [OBJECT_CLASS_TYPE.Map]: 'Map',\n  [OBJECT_CLASS_TYPE.Null]: 'Null',\n  [OBJECT_CLASS_TYPE.Number]: 'Number',\n  [OBJECT_CLASS_TYPE.Object]: 'Object',\n  [OBJECT_CLASS_TYPE.Promise]: 'Promise',\n  [OBJECT_CLASS_TYPE.RegExp]: 'RegExp',\n  [OBJECT_CLASS_TYPE.Set]: 'Set',\n  [OBJECT_CLASS_TYPE.String]: 'String',\n  [OBJECT_CLASS_TYPE.Symbol]: 'Symbol',\n  [OBJECT_CLASS_TYPE.Uint8Array]: 'Uint8Array',\n  [OBJECT_CLASS_TYPE.Uint8ClampedArray]: 'Uint8ClampedArray',\n  [OBJECT_CLASS_TYPE.Uint16Array]: 'Uint16Array',\n  [OBJECT_CLASS_TYPE.Uint32Array]: 'Uint32Array',\n  [OBJECT_CLASS_TYPE.Undefined]: 'Undefined',\n  [OBJECT_CLASS_TYPE.WeakMap]: 'WeakMap',\n  [OBJECT_CLASS_TYPE.WeakSet]: 'WeakSet',\n  [OBJECT_CLASS_TYPE.Window]: 'Window',\n} as const;\n\nexport const BAILOUT_TAGS = {\n  [OBJECT_CLASS_TYPE.Generator]: true,\n  [OBJECT_CLASS_TYPE.Promise]: true,\n  [OBJECT_CLASS_TYPE.WeakMap]: true,\n  [OBJECT_CLASS_TYPE.WeakSet]: true,\n} as const;\n\nexport const ITERABLE_TAGS = {\n  [OBJECT_CLASS_TYPE.Map]: true,\n  [OBJECT_CLASS_TYPE.Set]: true,\n} as const;\n\nexport const PRIMITIVE_TAGS = {\n  bigint: true,\n  boolean: true,\n  function: true,\n  number: true,\n  string: true,\n  undefined: true,\n} as const;\n\nexport const SELF_TAGS = {\n  [OBJECT_CLASS_TYPE.Arguments]: true,\n  [OBJECT_CLASS_TYPE.Array]: true,\n} as const;\n\nexport const TO_STRING_TAGS = {\n  [OBJECT_CLASS_TYPE.RegExp]: true,\n  [OBJECT_CLASS_TYPE.Symbol]: true,\n} as const;\n\nexport const TYPED_ARRAY_TAGS = {\n  [OBJECT_CLASS_TYPE.Float32Array]: true,\n  [OBJECT_CLASS_TYPE.Float64Array]: true,\n  [OBJECT_CLASS_TYPE.Int8Array]: true,\n  [OBJECT_CLASS_TYPE.Int16Array]: true,\n  [OBJECT_CLASS_TYPE.Int32Array]: true,\n  [OBJECT_CLASS_TYPE.Uint8Array]: true,\n  [OBJECT_CLASS_TYPE.Uint8ClampedArray]: true,\n  [OBJECT_CLASS_TYPE.Uint16Array]: true,\n  [OBJECT_CLASS_TYPE.Uint32Array]: true,\n} as const;\n","const HAS_BUFFER_FROM_SUPPORT =\n  typeof Buffer !== 'undefined' && typeof Buffer.from === 'function';\nconst HAS_UINT16ARRAY_SUPPORT = typeof Uint16Array === 'function';\n\n/**\n * get the string value of the buffer passed based on a Buffer\n *\n * @param buffer the array buffer to convert\n * @returns the stringified buffer\n */\nexport function getStringifiedArrayBufferFallback(\n  buffer: ArrayBufferLike,\n): string {\n  return String.fromCharCode.apply(null, new Uint16Array(buffer));\n}\n\n/**\n * get the string value of the buffer passed based on a Uint16Array\n *\n * @param buffer the array buffer to convert\n * @returns the stringified buffer\n */\nexport function getStringifiedArrayBufferModern(\n  buffer: ArrayBufferLike,\n): string {\n  return Buffer.from(buffer).toString('utf8');\n}\n\n/**\n * return a placeholder when no arraybuffer support exists\n *\n * @returns the placeholder\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function getStringifiedArrayBufferNoSupport(buffer: ArrayBufferLike) {\n  return '';\n}\n\n/**\n * @function getStringifiedArrayBuffer\n *\n * @description\n * get the string value of the buffer passed\n *\n * @param {ArrayBuffer} buffer the array buffer to convert\n * @returns {string} the stringified buffer\n */\nexport const getStringifiedArrayBuffer = (() => {\n  if (HAS_BUFFER_FROM_SUPPORT) {\n    return getStringifiedArrayBufferModern;\n  }\n\n  if (HAS_UINT16ARRAY_SUPPORT) {\n    return getStringifiedArrayBufferFallback;\n  }\n\n  return getStringifiedArrayBufferNoSupport;\n})();\n","import {\n  BAILOUT_TAGS,\n  ITERABLE_TAGS,\n  OBJECT_CLASS,\n  OBJECT_CLASS_TYPE,\n  PRIMITIVE_TAGS,\n  SELF_TAGS,\n  TO_STRING_TAGS,\n  TYPED_ARRAY_TAGS,\n} from './constants';\nimport { getStringifiedArrayBuffer } from './arrayBuffer';\n\nconst FUNCTION_NAME_REGEX = /^\\s*function\\s*([^(]*)/i;\nconst HTML_ELEMENT_REGEXP = /\\[object (HTML(.*)Element)\\]/;\nconst SVG_ELEMENT_REGEXP = /\\[object (SVG(.*)Element)\\]/;\n\nconst toString = Object.prototype.toString;\nconst keys = Object.keys;\n\n/**\n * get the name of the function based on a series of fallback attempts\n *\n * @param fn the function to test\n * @returns the function name\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getConstructorName(fn: Function) {\n  return (\n    fn.name ||\n    (fn.toString().match(FUNCTION_NAME_REGEX) || [])[1] ||\n    'anonymous'\n  );\n}\n\n/**\n * get the event object sorted by its properties\n *\n * @param event the event to sort\n * @returns the event object with all properties sorted\n */\nfunction getSortedEvent(event: Event) {\n  return {\n    bubbles: event.bubbles,\n    cancelBubble: event.cancelBubble,\n    cancelable: event.cancelable,\n    composed: event.composed,\n    currentTarget: event.currentTarget,\n    defaultPrevented: event.defaultPrevented,\n    eventPhase: event.eventPhase,\n    isTrusted: event.isTrusted,\n    returnValue: event.returnValue,\n    target: event.target,\n    type: event.type,\n  };\n}\n\n/**\n * get the sort result based on the two values to compare\n *\n * @param first the first value to compare\n * @param second the second value to compare\n * @returns should the value be sorted\n */\nfunction shouldSort(first: string, second: string) {\n  return first > second;\n}\n\n/**\n * get the sort result based on the two pairs to compare\n *\n * @param firstPair the first pair to compare\n * @param secondPair the second pair to compare\n * @returns should the value be sorted\n */\nfunction shouldSortPair(\n  firstPair: [string, string],\n  secondPair: [string, string],\n) {\n  return firstPair[0] > secondPair[0];\n}\n\n/**\n * sort the array based on the fn passed\n *\n * @param array the array to sort\n * @param fn the sorting function\n * @returns the sorted array\n */\nfunction sort(array: any[], fn: (item: any, comparisonItem: any) => boolean) {\n  let subIndex;\n  let value;\n\n  for (let index = 0; index < array.length; ++index) {\n    value = array[index];\n\n    for (\n      subIndex = index - 1;\n      ~subIndex && fn(array[subIndex], value);\n      --subIndex\n    ) {\n      array[subIndex + 1] = array[subIndex];\n    }\n\n    array[subIndex + 1] = value;\n  }\n\n  return array;\n}\n\n/**\n * get the pairs in the iterable for stringification\n *\n * @param iterable the iterable to get the pairs for\n * @returns the sorted, stringified entries\n */\nfunction getSortedIterable(\n  iterable: Map<any, any> | Set<any>,\n  cache: any[],\n  keys: string[],\n) {\n  const isMap = iterable instanceof Map;\n  const entries: [string, string][] | string[] = [];\n\n  if (isMap) {\n    iterable.forEach((value: any, key: any) => {\n      (entries as [string, string][]).push([\n        stringify(key, cache, keys),\n        stringify(value, cache, keys),\n      ] as [string, string]);\n    });\n\n    sort(entries, shouldSortPair);\n  } else {\n    iterable.forEach((value: any) => {\n      (entries as string[]).push(stringify(value, cache, keys));\n    });\n\n    sort(entries, shouldSort);\n  }\n\n  let final = `${getConstructorName(iterable.constructor)}|[`;\n\n  for (let index = 0, length = entries.length, entry; index < length; ++index) {\n    entry = entries[index];\n\n    final += `${index ? ',' : ''}${\n      isMap ? `[${entry[0]},${entry[1]}]` : entry\n    }`;\n  }\n\n  return `${final}]`;\n}\n\n/**\n * get the object with the keys sorted\n *\n * @param object the object to sort\n * @returns the sorted object\n */\nfunction getSortedObject<UnsortedObject>(object: UnsortedObject) {\n  const objectKeys = sort(keys(object), shouldSort);\n  const newObject = {} as UnsortedObject;\n\n  let key: keyof UnsortedObject;\n\n  for (let index = 0; index < objectKeys.length; ++index) {\n    key = objectKeys[index];\n\n    newObject[key] = object[key];\n  }\n\n  return newObject;\n}\n\n/**\n * build a string based on all the fragment's children\n *\n * @param fragment the fragment to stringify\n * @returns the stringified fragment\n */\nfunction getStringifiedDocumentFragment(fragment: DocumentFragment) {\n  const children = fragment.children;\n\n  let innerHTML = '';\n\n  for (let index = 0; index < children.length; ++index) {\n    innerHTML += children[index].outerHTML;\n  }\n\n  return innerHTML;\n}\n\n/**\n * get the index after that of the value match in the array (faster than\n * native indexOf) to determine the cutoff index for the `splice()` call.\n *\n * @param array the array to get the index of the value at\n * @param value the value to match\n * @returns the index after the value match in the array\n */\nfunction getCutoffIndex(array: any[], value: any) {\n  for (let index = 0; index < array.length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * get the value normalized for stringification\n *\n * @param value the value to normalize\n * @param sortedCache the cache of sorted objects\n * @param passedTag the previously-calculated tag\n * @returns the normalized value\n */\nfunction getNormalizedValue(\n  value: any,\n  cache?: any[],\n  keys?: string[],\n  passedTag?: keyof typeof OBJECT_CLASS,\n) {\n  if (!passedTag) {\n    const type = typeof value;\n\n    if (\n      type === 'string' ||\n      PRIMITIVE_TAGS[type as keyof typeof PRIMITIVE_TAGS]\n    ) {\n      return `${type}|${value}`;\n    }\n\n    if (value === null) {\n      return `null|${value}`;\n    }\n  }\n\n  const tag: keyof typeof OBJECT_CLASS = passedTag || toString.call(value);\n\n  if (SELF_TAGS[tag as keyof typeof SELF_TAGS]) {\n    return value;\n  }\n\n  if (tag === OBJECT_CLASS_TYPE.Object) {\n    return getSortedObject(value);\n  }\n\n  if (TO_STRING_TAGS[tag as keyof typeof TO_STRING_TAGS]) {\n    return `${OBJECT_CLASS[tag]}|${value.toString()}`;\n  }\n\n  if (ITERABLE_TAGS[tag as keyof typeof ITERABLE_TAGS]) {\n    return getSortedIterable(value, cache, keys);\n  }\n\n  if (tag === OBJECT_CLASS_TYPE.Date) {\n    return `${OBJECT_CLASS[tag]}|${value.getTime()}`;\n  }\n\n  if (tag === OBJECT_CLASS_TYPE.Error) {\n    return `${OBJECT_CLASS[tag]}|${value.stack}`;\n  }\n\n  if (tag === OBJECT_CLASS_TYPE.Event) {\n    return getSortedEvent(value);\n  }\n\n  if (BAILOUT_TAGS[tag as keyof typeof BAILOUT_TAGS]) {\n    return `${OBJECT_CLASS[tag]}|NOT_ENUMERABLE`;\n  }\n\n  if (HTML_ELEMENT_REGEXP.test(tag) || SVG_ELEMENT_REGEXP.test(tag)) {\n    return `${tag.slice(8, -1)}|${value.outerHTML}`;\n  }\n\n  if (tag === OBJECT_CLASS_TYPE.DocumentFragment) {\n    return `${OBJECT_CLASS[tag]}|${getStringifiedDocumentFragment(value)}`;\n  }\n\n  if (TYPED_ARRAY_TAGS[tag as keyof typeof TYPED_ARRAY_TAGS]) {\n    return `${OBJECT_CLASS[tag]}|${value.join(',')}`;\n  }\n\n  if (tag === OBJECT_CLASS_TYPE.ArrayBuffer) {\n    return `${OBJECT_CLASS[tag]}|${getStringifiedArrayBuffer(value)}`;\n  }\n\n  if (tag === OBJECT_CLASS_TYPE.DataView) {\n    return `${OBJECT_CLASS[tag]}|${getStringifiedArrayBuffer(value.buffer)}`;\n  }\n\n  return value;\n}\n\n/**\n * create the replacer function used for stringification\n *\n * @param sortedCache the cache to use for sorting objects\n * @returns function getting the normalized value\n */\nfunction createReplacer(cache: any[] = [], keys: string[] = []) {\n  return function (key: string, value: any) {\n    if (typeof value === 'object') {\n      if (cache.length) {\n        const thisCutoff = getCutoffIndex(cache, this);\n\n        if (thisCutoff === 0) {\n          cache.push(this);\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n\n        keys.push(key);\n\n        const valueCutoff = getCutoffIndex(cache, value);\n\n        if (valueCutoff !== 0) {\n          return `[~${keys.slice(0, valueCutoff).join('.') || '.'}]`;\n        }\n\n        cache.push(value);\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n\n    if (key && this[key] instanceof Date) {\n      return getNormalizedValue(this[key], cache, keys, OBJECT_CLASS_TYPE.Date);\n    }\n\n    return getNormalizedValue(value, cache, keys);\n  };\n}\n\n/**\n * stringify the value based on the options passed\n *\n * @param value the value to stringify\n * @returns the stringified value\n */\nfunction stringify(value: any, cache?: any[], keys?: string[]): string {\n  if (!value || typeof value !== 'object') {\n    return getNormalizedValue(value, cache, keys);\n  }\n\n  const tag = toString.call(value);\n\n  if (tag === OBJECT_CLASS_TYPE.Date || tag === OBJECT_CLASS_TYPE.RegExp) {\n    return getNormalizedValue(value, cache, keys, tag);\n  }\n\n  return JSON.stringify(value, createReplacer(cache, keys));\n}\n\nexport default stringify;\n","import getUniqueIntegerFromString from './hash';\nimport stringify from './stringify';\n\n/**\n * hash the value passed to a unique, consistent hash value\n *\n * @param value the value to hash\n * @returns the object hash\n */\nfunction hash(value: any) {\n  return getUniqueIntegerFromString(stringify(value));\n}\n\nfunction is(value: any, otherValue: any) {\n  return hash(value) === hash(otherValue);\n}\n\nfunction isAll(value: any, ...otherValues: any[]) {\n  for (let index = 0; index < otherValues.length; ++index) {\n    if (!is(value, otherValues[index])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isAny(value: any, ...otherValues: any[]) {\n  for (let index = 0; index < otherValues.length; ++index) {\n    if (is(value, otherValues[index])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isNot(value: any, otherValue: any) {\n  return hash(value) !== hash(otherValue);\n}\n\nis.all = isAll;\nis.any = isAny;\nis.not = isNot;\n\nhash.is = is;\n\nexport default hash;\n","/**\n * based on string passed, get the integer hash value\n * through bitwise operation (based on spinoff of dbj2\n * with enhancements for reduced collisions)\n *\n * @param string the string to get the hash value for\n * @returns the hash value\n */\nfunction getUniqueIntegerFromString(string: string) {\n  let index = string.length;\n  let hashA = 5381;\n  let hashB = 52711;\n  let charCode;\n\n  while (index--) {\n    charCode = string.charCodeAt(index);\n\n    hashA = (hashA * 33) ^ charCode;\n    hashB = (hashB * 33) ^ charCode;\n  }\n\n  return (hashA >>> 0) * 4096 + (hashB >>> 0);\n}\n\nexport default getUniqueIntegerFromString;\n"],"names":["OBJECT_CLASS_TYPE","OBJECT_CLASS","Arguments","Array","ArrayBuffer","Boolean","DataView","Date","DocumentFragment","Error","Event","Float32Array","Float64Array","Function","Generator","GeneratorFunction","HTMLElement","Int8Array","Int16Array","Int32Array","Map","Null","Number","Object","Promise","RegExp","Set","String","Symbol","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","Undefined","WeakMap","WeakSet","Window","BAILOUT_TAGS","ITERABLE_TAGS","PRIMITIVE_TAGS","bigint","boolean","function","number","string","undefined","SELF_TAGS","TO_STRING_TAGS","TYPED_ARRAY_TAGS","HAS_BUFFER_FROM_SUPPORT","Buffer","from","HAS_UINT16ARRAY_SUPPORT","getStringifiedArrayBufferFallback","buffer","fromCharCode","apply","getStringifiedArrayBufferModern","toString","getStringifiedArrayBufferNoSupport","getStringifiedArrayBuffer","FUNCTION_NAME_REGEX","HTML_ELEMENT_REGEXP","SVG_ELEMENT_REGEXP","prototype","keys","shouldSort","first","second","shouldSortPair","firstPair","secondPair","sort","array","fn","subIndex","value","index","length","getSortedIterable","iterable","cache","isMap","entries","forEach","key","push","stringify","entry","final","constructor","name","match","getSortedObject","object","objectKeys","newObject","getCutoffIndex","getNormalizedValue","passedTag","type","event","tag","call","getTime","stack","bubbles","cancelBubble","cancelable","composed","currentTarget","defaultPrevented","eventPhase","isTrusted","returnValue","target","test","slice","outerHTML","fragment","children","innerHTML","getStringifiedDocumentFragment","join","JSON","thisCutoff","this","splice","valueCutoff","createReplacer","hash","charCode","hashA","hashB","charCodeAt","getUniqueIntegerFromString","is","otherValue","all","any","not"],"mappings":"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"}